<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper"> <!-- 다른데서 쓸데 네임스페이스 필요 -->
<!-- 첨부파일 CRUD 쿼리 생성 ,주,우리로직에서는 첨부파일은 수정x,입력/삭제o-->
<!-- 첨부파일 삭제는 1개만 삭제하지 않고, 게시물별(bno) 일괄삭제도 있음 -->
<delete id="deleteAttachAll">
delete from tbl_attach where bno=#{bno}
</delete>

<delete id="deleteAttach">
delete from tbl_attach where save_file_name=#{sava_file_name}
</delete>

<!-- 왜 수정이 없는가 ->저장된 파일을  수정못하고,신규파일을 덮어씁니다.단,bno를 매게변수로받습니다.(수정이기떄문에)-->
<insert id="updateAttach">
insert into tbl_attach (
save_file_name,real_file_name,reg_date,bno
)
values 
(
#{save_file_name},#{real_file_name},sysdate,#{bno}
)
</insert>

<select id="readAttach" resultType="com.edu.vo.AttachVO">
select * from tbl_attach where bno=#{bno}
</select>

<!--  게시물 등록시 발생된 bno구한 결과값 1개만 구해서 첨부파일의 bno입력값으로 사용-서브쿼리사용 -->
<insert id="insertAttach">
insert into tnl_attach
(
	save_file_name,real_file_name,reg_date,bno
)
values
(
	#{save_file_name},#{real_file_name},sysdate,#{bno}
	
)
<!--  bno변수값으로 받는 로직을 추가했기 때문에 아래 주석
select bno from(
		select bno from tbl_board order by bno desc
	) where rownum=1;
	-->
<!-- 위 bno는 게시물 등록시 첨부파일 쿼리는 bno를 매개변수로 보낼수가없는 상태 -->
</insert>

<!-- 게시물 CRUD 쿼리 생성 -->
<delete id="deleteBoard">
delete from tbl_board where bno=#{bno}   <!-- bno는 pk -->
</delete>
<update id="updateBoard">
update tbl_board set 
board_type =#{board_type}
,title =#{title}
,content =#{content}
,writer =#{writer}
,update_date=systimestamp
where bno =#{bno}
</update>
<!-- 아래뷰카운터는 게시물 상세보기시 카운트 증가 ,예 유튜브조회수증가와비슷 -->
<update id="updateViewCount">
update tbl_board set
view_count = nvl(view_count,0)+1  <!-- view_count가 null일수도있기떄문에 nvl(,0)추가 -->
where bno=#{bno}
</update>
<select id="readBoard" resultType="com.edu.vo.BoardVO">
select * from tbl_board where bno=#{bno}
</select>
<!-- bno필드 변수가 자동증가가 되는 기능이 필요  seq.nextVal
parameterType 출력처리 ok.
-->
<insert id="insertBoard" parameterType="com.edu.vo.BoardVO">
	<selectKey keyProperty="bno" resultType="int" order="BEFORE">  <!-- 101값이 bno값에담벼겨 벨류 아래bno로담김 ,순서는 인서트보다 셀렉트먼저실행-->
	select seq_bno.nextval from dual
	</selectKey>
	insert into tbl_board 
	(
	bno, title, content, writer, reg_date, board_type
	)
	values 
	(
	#{bno},#{title},#{content},#{writer},systimestamp,#{board_type}
	)

</insert>
<!-- 페이징을 제외한 검색쿼리(board_type포함)를 이용해서 게시물 갯수 totalCount변수값 구하기 -->
<select id="countBoard" resultType="int">
select count(*) from tbl_board 
<include refid="sqlWhere"/>
</select>

<!-- 페이징처리떄문에 중첩쿼리 생성 (아래) -->
<select id="selectBoard" resultType="com.edu.vo.BoardVO"> <!-- 이걸로 반환받을거야 -->
select table_b.* from
(
	select rownum as rnum,table_a.*from
	(
		select * from tbl_board
		<include refid="sqlWhere"/><!-- 훼어조건1 -->
		order by bno desc<!-- bno기준 역순정렬 -->
	) table_a
<![CDATA[
	where rownum <= #{queryStartNo}+#{queryPerPageNum}
) table_b where table_b.rnum > #{queryStartNo}
]]>
</select>
<!-- 검색처리는 맴버쿼리에서 작성한 내용 붙여넣기. 다중게시판용 필드 조회조건 추가PageVO에도 -->
<sql id="sqlWhere">
     WHERE board_type=#{board_type}
<if test= "search_type !='' and search_type !=null">
     	and(
     	<if test="search_type == 'all'.toString()">
      		title LIKE '%'||#{search_keyword}||'%'
      		OR content LIKE '%'||#{search_keyword}||'%'
     	</if>
     	<if test="search_type == 'title'.toString()">
      		title LIKE '%'||#{search_keyword}||'%'
     	</if>
     	<if test="search_type == 'content'.toString()">
      		content LIKE '%'||#{search_keyword}||'%'
     	</if>
     	)
     </if>
</sql>

</mapper>
